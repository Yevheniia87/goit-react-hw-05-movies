{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","state","reviews","a","movieId","this","props","match","params","fetchMoviesReviews","then","results","setState","map","review","author","content","id","length","Component","withRouter"],"mappings":"mOAIMA,E,4MACJC,MAAQ,CACNC,QAAS,I,8FAEX,mCAAAC,EAAA,sDACQC,EAAUC,KAAKC,MAAMC,MAAMC,OAAOJ,QACxCK,YAAmBL,GAASM,MAAK,SAACC,GAAD,OAC/B,EAAKC,SAAS,CACZV,QAASS,OAJf,gD,0EAQA,WACE,IAAQT,EAAYG,KAAKJ,MAAjBC,QACR,OACE,8BACE,+BACGA,GACCA,EAAQW,KAAI,SAACC,GAAD,OACV,+BACE,yCAAYA,EAAOC,UACnB,4BAAID,EAAOE,YAFJF,EAAOG,OAKA,IAAnBf,EAAQgB,QAAgB,gC,GAxBbC,aAoCPC,+BAAWpB","file":"static/js/8.c55f24b2.chunk.js","sourcesContent":["import { Component, withRouter } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fetchMoviesReviews } from \"../../services/moviesApi\";\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n  async componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n    fetchMoviesReviews(movieId).then((results) =>\r\n      this.setState({\r\n        reviews: results,\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {reviews &&\r\n            reviews.map((review) => (\r\n              <li key={review.id}>\r\n                <p>Author: {review.author}</p>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          {reviews.length === 0 && \"There are no reviews\"}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nReviews.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({ movieId: PropTypes.string }),\r\n    path: PropTypes.string,\r\n  }),\r\n};\r\nexport default withRouter(Reviews);\r\n"],"sourceRoot":""}