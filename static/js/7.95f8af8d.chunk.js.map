{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","id","useState","reviews","setReviews","useEffect","movieAPI","fetchMoviesReviews","then","data","results","catch","error","console","log","length","map","author","content"],"mappings":"yNAIe,SAASA,EAAT,GAA0B,IAAPC,EAAM,EAANA,GAChC,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,qBAAU,WACRC,IACGC,mBAAmBN,GACnBO,MAAK,SAACC,GACLL,EAAWK,EAAKC,YAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,CAACX,IACAE,GAA8B,IAAnBA,EAAQY,OACd,sEAGP,6BACGZ,GACCA,EAAQa,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,+BACE,yCAAYD,KACZ,4BAAIC,MAFGjB","file":"static/js/7.95f8af8d.chunk.js","sourcesContent":["import movieAPI from \"../../services/moviesApi\";\r\nimport { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Reviews({ id }) {\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    movieAPI\r\n      .fetchMoviesReviews(id)\r\n      .then((data) => {\r\n        setReviews(data.results);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [id]);\r\n  if (reviews && reviews.length === 0) {\r\n    return <p>This movie is not available for rent!</p>;\r\n  }\r\n  return (\r\n    <ul>\r\n      {reviews &&\r\n        reviews.map(({ id, author, content }) => (\r\n          <li key={id}>\r\n            <p>Author: {author}</p>\r\n            <p>{content}</p>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\nReviews.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n"],"sourceRoot":""}