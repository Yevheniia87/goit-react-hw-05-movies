{"version":3,"sources":["services/moviesApi.js","views/movieDetail.module.css","views/MovieDetailsPage.js"],"names":["API_KEY","BASE_URL","api","fetchMoviesTrending","fetch","then","resp","ok","json","Promise","reject","Error","fetchMovies","query","fetchMoviesDetails","id","fetchMoviesCast","fetchMoviesReviews","page","module","exports","Cast","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","movieId","useParams","url","useRouteMatch","useEffect","movieAPI","data","className","styles","details","poster","src","poster_path","alt","original_title","vote_average","overview","genres","map","genre","name","exact","to","link","activeClassName","activeLink","fallback","path"],"mappings":"yIAAA,IAAMA,EAAU,mCACVC,EAAW,gCA6DjB,IAAMC,EAAM,CACVC,oBA5DF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CD,IAAWK,MAC/D,SAACC,GACC,OAAIA,EAAKC,GACAD,EAAKE,OAEPC,QAAQC,OAAO,IAAIC,MAAJ,sCAuD1BC,YAnDF,SAAqBC,GACnB,OAAOT,MAAM,GAAD,OACPH,EADO,gCACyBD,EADzB,iCACyDa,EADzD,+BAEVR,MAAK,SAACC,GACN,OAAIA,EAAKC,GACAD,EAAKE,OAEPC,QAAQC,OACb,IAAIC,MAAJ,0CAA6CE,EAA7C,WA4CJC,mBAxCF,SAA4BC,GAC1B,OAAOX,MAAM,GAAD,OAAIH,EAAJ,iBAAqBc,EAArB,oBAAmCf,EAAnC,oBAA6DK,MACvE,SAACC,GACC,OAAIA,EAAKC,GACAD,EAAKE,OAEPC,QAAQC,OACb,IAAIC,MAAJ,+CAAkDI,EAAlD,WAkCNC,gBA5BF,SAAyBD,GACvB,OAAOX,MAAM,GAAD,OACPH,EADO,iBACUc,EADV,4BACgCf,EADhC,oBAEVK,MAAK,SAACC,GACN,OAAIA,EAAKC,GACAD,EAAKE,OAEPC,QAAQC,OACb,IAAIC,MAAJ,6CAAgDI,EAAhD,WAqBJE,mBAjBF,SAA4BF,GAAe,IAAXG,EAAU,uDAAH,EACrC,OAAOd,MAAM,GAAD,OACPH,EADO,iBACUc,EADV,4BACgCf,EADhC,gCAC+DkB,IACzEb,MAAK,SAACC,GACN,OAAIA,EAAKC,GACAD,EAAKE,OAEPC,QAAQC,OACb,IAAIC,MAAJ,uDAA0DI,EAA1D,YAWSb,O,mBCpEfiB,EAAOC,QAAU,CAAC,QAAU,6BAA6B,OAAS,4BAA4B,WAAa,gCAAgC,OAAS,8B,uJCK9IC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAEZ,SAASE,IACtB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAYC,cAAZD,QACAE,EAAQC,cAARD,IAOR,OALAE,qBAAU,WACRC,IAASnB,mBAAmBc,GAASvB,MAAK,SAAC6B,GACzCP,EAASO,QAEV,CAACN,IAEF,mCACGF,GACC,qCACE,sBAAKS,UAAWC,IAAOC,QAAvB,UACE,qBACEF,UAAWC,IAAOE,OAClBC,IAAG,0CAAqCb,EAAMc,aAC9CC,IAAKf,EAAMgB,iBAEb,gCACE,6BAAKhB,EAAMgB,iBACX,4BAAIhB,EAAMiB,eACV,0CACA,4BAAIjB,EAAMkB,WACV,wCACA,mBAAGT,UAAWC,IAAOS,OAArB,SACGnB,EAAMmB,QACLnB,EAAMmB,OAAOC,KAAI,SAACC,GAAD,OACf,+BAAsBA,EAAMC,MAAjBD,EAAMhC,eAK3B,gCACE,uDACA,cAAC,IAAD,CACEkC,OAAK,EACLC,GAAE,UAAKpB,EAAL,SACFK,UAAWC,IAAOe,KAClBC,gBAAiBhB,IAAOiB,WAJ1B,kBAQA,cAAC,IAAD,CACEJ,OAAK,EACLC,GAAE,UAAKpB,EAAL,YACFK,UAAWC,IAAOe,KAClBC,gBAAiBhB,IAAOiB,WAJ1B,wBASF,eAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,UACE,cAAC,IAAD,CAAOC,KAAI,UAAKzB,EAAL,SAAX,SACE,cAACT,EAAD,CAAMN,GAAIa,MAEZ,cAAC,IAAD,CAAO2B,KAAI,UAAKzB,EAAL,YAAX,SACE,cAACP,EAAD,CAASR,GAAIa","file":"static/js/6.0f9273c0.chunk.js","sourcesContent":["const API_KEY = \"68d3c74a18d32691083dc9e313e197f5\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nfunction fetchMoviesTrending() {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    (resp) => {\n      if (resp.ok) {\n        return resp.json();\n      }\n      return Promise.reject(new Error(`Popular movies failed to load`));\n    }\n  );\n}\nfunction fetchMovies(query) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=true`\n  ).then((resp) => {\n    if (resp.ok) {\n      return resp.json();\n    }\n    return Promise.reject(\n      new Error(`Not found any movies by query: \"${query}\"`)\n    );\n  });\n}\nfunction fetchMoviesDetails(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    (resp) => {\n      if (resp.ok) {\n        return resp.json();\n      }\n      return Promise.reject(\n        new Error(`Not found any movies by identifier: '${id}'`)\n      );\n    }\n  );\n}\n\nfunction fetchMoviesCast(id) {\n  return fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then((resp) => {\n    if (resp.ok) {\n      return resp.json();\n    }\n    return Promise.reject(\n      new Error(`Not found any cast by identifier: '${id}'`)\n    );\n  });\n}\nfunction fetchMoviesReviews(id, page = 1) {\n  return fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-Us&page=${page}`\n  ).then((resp) => {\n    if (resp.ok) {\n      return resp.json();\n    }\n    return Promise.reject(\n      new Error(`Not found any movies reviews by identifier: '${id}'`)\n    );\n  });\n}\nconst api = {\n  fetchMoviesTrending,\n  fetchMovies,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\nexport default api;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"movieDetail_details__1FzKI\",\"poster\":\"movieDetail_poster__1KIuq\",\"activeLink\":\"movieDetail_activeLink__1NT4y\",\"genres\":\"movieDetail_genres__36MIz\"};","import { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Route, NavLink, useParams, useRouteMatch } from \"react-router-dom\";\nimport Loader from \"../components/Loader/Loader\";\nimport styles from \"../views/movieDetail.module.css\";\nimport movieAPI from \"../services/moviesApi\";\n\nconst Cast = lazy(() => import(\"../components/Cast/Cast\"));\nconst Reviews = lazy(() => import(\"../components/Reviews/Reviews\"));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    movieAPI.fetchMoviesDetails(movieId).then((data) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n  return (\n    <>\n      {movie && (\n        <>\n          <div className={styles.details}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n            <div>\n              <h2>{movie.original_title}</h2>\n              <p>{movie.vote_average}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p className={styles.genres}>\n                {movie.genres &&\n                  movie.genres.map((genre) => (\n                    <span key={genre.id}>{genre.name}</span>\n                  ))}\n              </p>\n            </div>\n          </div>\n          <div>\n            <h4>Aditional information</h4>\n            <NavLink\n              exact\n              to={`${url}/Cast`}\n              className={styles.link}\n              activeClassName={styles.activeLink}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              exact\n              to={`${url}/Reviews`}\n              className={styles.link}\n              activeClassName={styles.activeLink}\n            >\n              Reviews\n            </NavLink>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Route path={`${url}/Cast`}>\n              <Cast id={movieId} />\n            </Route>\n            <Route path={`${url}/Reviews`}>\n              <Reviews id={movieId} />\n            </Route>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}